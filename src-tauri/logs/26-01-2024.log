[26-01-2024 14:35:09]:⚙ DEBUG -> summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON;\n" rows_affected=0 rows_returned=0 elapsed=79.088µs
[26-01-2024 14:35:09]:⚙ DEBUG -> summary="CREATE TABLE IF NOT …" db.statement="\n\nCREATE TABLE IF NOT EXISTS statuses (\n  id TEXT PRIMARY KEY NOT NULL,\n  user_id TEXT NOT NULL,\n  start_date TEXT NOT NULL,\n  end_date TEXT NOT NULL,\n  place TEXT NOT NULL,\n  note TEXT status_type NUMBER NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=132.455366ms
[26-01-2024 14:35:09]:⚙ DEBUG -> summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON;\n" rows_affected=0 rows_returned=0 elapsed=51.991µs
[26-01-2024 14:35:09]:⚙ DEBUG -> summary="CREATE TABLE IF NOT …" db.statement="\n\nCREATE TABLE IF NOT EXISTS users (\n  id TEXT PRIMARY KEY NOT NULL,\n  name1 TEXT NOT NULL,\n  name2 TEXT NOT NULL,\n  surname TEXT NOT NULL,\n  post TEXT NOT NULL,\n  san_ticket_number TEXT NOT NULL,\n  bornsday TEXT NOT NULL,\n  department TEXT NOT NULL,\n  rank TEXT NOT NULL,\n  live_place TEXT NOT NULL,\n  phones JSON DEFAULT('[]'),\n  tests JSON DEFAULT('[]')\n);\n" rows_affected=0 rows_returned=0 elapsed=325.939µs
[26-01-2024 14:35:09]:⚙ DEBUG -> summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON;\n" rows_affected=0 rows_returned=0 elapsed=45.432µs
[26-01-2024 14:35:09]:⚙ DEBUG -> summary="CREATE TABLE IF NOT …" db.statement="\n\nCREATE TABLE IF NOT EXISTS diseases (\n  id TEXT PRIMARY KEY NOT NULL,\n  user_id TEXT NOT NULL,\n  disease_type TEXT NOT NULL,\n  date_of_illness TEXT NOT NULL,\n  date_of_recovery TEXT,\n  clinic TEXT NOT NULL,\n  note TEXT\n);\n" rows_affected=0 rows_returned=0 elapsed=324.881µs
[26-01-2024 14:35:09]:⚙ DEBUG -> summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON;\n" rows_affected=0 rows_returned=0 elapsed=107.38µs
[26-01-2024 14:35:09]:⚙ DEBUG -> summary="CREATE TABLE IF NOT …" db.statement="\n\nCREATE TABLE IF NOT EXISTS diseases_types (\n  id TEXT PRIMARY KEY NOT NULL,\n  name TEXT NOT NULL,\n  need_reference INTEGER NOT NULL DEFAULT 0\n);\n" rows_affected=0 rows_returned=0 elapsed=382.633µs
[26-01-2024 14:35:09]:⚙ DEBUG -> summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON;\n" rows_affected=0 rows_returned=0 elapsed=43.865µs
[26-01-2024 14:35:09]:⚙ DEBUG -> summary="CREATE TABLE IF NOT …" db.statement="\n\nCREATE TABLE IF NOT EXISTS departments (\n  id TEXT PRIMARY KEY NOT NULL,\n  name TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=314.635µs
[26-01-2024 14:35:09]:⚙ DEBUG -> summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON;\n" rows_affected=0 rows_returned=0 elapsed=156.463µs
[26-01-2024 14:35:09]:⚙ DEBUG -> summary="CREATE TABLE IF NOT …" db.statement="\n\nCREATE TABLE IF NOT EXISTS posts (\n  id TEXT PRIMARY KEY NOT NULL,\n  name TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=324.011µs
[26-01-2024 14:35:09]:⚙ DEBUG -> summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON;\n" rows_affected=0 rows_returned=0 elapsed=75.408µs
[26-01-2024 14:35:09]:⚙ DEBUG -> summary="CREATE TABLE IF NOT …" db.statement="\n\nCREATE TABLE IF NOT EXISTS ranks (\n  id TEXT PRIMARY KEY NOT NULL,\n  name TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=369.856µs
[26-01-2024 14:35:09]:⚙ DEBUG -> summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON;\n" rows_affected=0 rows_returned=0 elapsed=67.958µs
[26-01-2024 14:35:09]:⚙ DEBUG -> summary="CREATE TABLE IF NOT …" db.statement="\n\nCREATE TABLE IF NOT EXISTS clinics (\n  id TEXT PRIMARY KEY NOT NULL,\n  name TEXT NOT NULL\n);\n" rows_affected=0 rows_returned=0 elapsed=281.156µs
[26-01-2024 14:35:11]:⚙ DEBUG -> summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON;\n" rows_affected=0 rows_returned=0 elapsed=73.62µs
[26-01-2024 14:35:11]:⚙ DEBUG -> summary="SELECT d.id, d.user_id, t.id …" db.statement="\n\nSELECT\n  d.id,\n  d.user_id,\n  t.id as disease_type_id,\n  t.name as disease_type_name,\n  t.need_reference as disease_type_need_reference,\n  d.date_of_illness,\n  d.date_of_recovery,\n  c.id as clinic_id,\n  c.name as clinic_name,\n  d.note\nFROM\n  diseases d\n  INNER JOIN diseases_types t on disease_type_id = d.disease_type\n  INNER JOIN clinics c on clinic_id = d.clinic\nWHERE\n  date_of_recovery is NULL\n  OR date(date_of_recovery) >= date();\n" rows_affected=0 rows_returned=3 elapsed=70.990521ms
[26-01-2024 14:35:11]:⚙ DEBUG -> summary="PRAGMA foreign_keys = ON; …" db.statement="\n\nPRAGMA foreign_keys = ON;\n" rows_affected=0 rows_returned=0 elapsed=51.53µs
[26-01-2024 14:35:11]:⚙ DEBUG -> summary="SELECT u.id, u.name1, u.name2, …" db.statement="\n\nSELECT\n  u.id,\n  u.name1,\n  u.name2,\n  u.surname,\n  u.san_ticket_number,\n  u.bornsday,\n  p.id as post_id,\n  p.name as post_name,\n  d.id as department_id,\n  d.name as department_name,\n  r.id as rank_id,\n  r.name as rank_name,\n  u.live_place,\n  u.phones,\n  u.tests\nFROM\n  users u\n  INNER JOIN posts p on p.id = u.post\n  INNER JOIN departments d on d.id = u.department\n  INNER JOIN ranks r on r.id = u.rank\nWHERE\n  id IN (\n    \"0a861185-d110-4c0d-adf7-e04137c7875a\",\n    \"b521e1e1-8143-4721-a21f-a430ecff53bf\",\n    \"03f4f99d-b482-4cd4-9599-4872e8aebac6\"\n  )\n" rows_affected=0 rows_returned=0 elapsed=396.792µs
